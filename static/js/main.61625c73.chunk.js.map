{"version":3,"sources":["index.jsx"],"names":["App","className","Clock","React","Component","props","setTime","state","isPlay","audioId","playingSessionTimer","breakLength","minBreakLeft","secBreakLeft","sessionLength","minSessLeft","secSessLeft","y","document","getElementById","setState","currentTime","play","interval","setInterval","handlePlay","intervalId","handlePause","clearInterval","pause","handleInitialize","handleBreakDecrement","handleBreakIncrement","handleSessionDecrement","handleSessionIncrement","handleReset","checkTime","i","style","textAlign","id","onClick","this","fontSize","src","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.61625c73.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  render(){  \n    return(\n        <div className=\"wrapper\">\n          <Clock/>\n        </div>\n      );\n  }\n}\n\n\n\n\nclass Clock extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isPlay: false,\n      minSessLeft: 25,\n      secSessLeft: 0,\n      minBreakLeft: 5,\n      secBreakLeft: 0,\n      breakLength: 5,\n      sessionLength: 25,\n      intervalId: -1,\n      audioId: 'beep',\n      playingSessionTimer: true\n    };\n  }\n\n  setTime = () => {  \n    const {isPlay, audioId, playingSessionTimer,breakLength, minBreakLeft, secBreakLeft,sessionLength, minSessLeft, secSessLeft}\n    = this.state;   \n    let y = document.getElementById(audioId);\n    if (playingSessionTimer) {\n      this.setState ({\n        minSessLeft: secSessLeft == 0?\n                      minSessLeft - 1:\n                      minSessLeft,\n        secSessLeft: minSessLeft==0&secSessLeft==0?secSessLeft:        \n                      secSessLeft > 0? \n                      secSessLeft - 1:\n                                 59\n      })\n    } else {\n      this.setState ({\n        minBreakLeft: secBreakLeft == 0?\n                      minBreakLeft - 1:\n                      minBreakLeft,\n        secBreakLeft: minBreakLeft==0&secBreakLeft==0?secBreakLeft: \n                      secBreakLeft > 0? \n                      secBreakLeft - 1:\n                                59\n      })\n    };        \n\n    if (playingSessionTimer&&isPlay&&minSessLeft==0&&secSessLeft==0) {\n      this.setState({\n        playingSessionTimer: false,\n        minSessLeft: sessionLength,\n        secSessLeft: 0,\n      });\n      y.currentTime = 1;\n      y.play();\n    } else if (!playingSessionTimer&&isPlay&&minBreakLeft==0&&secBreakLeft==0) {\n      this.setState({\n        playingSessionTimer: true,\n        minBreakLeft: breakLength,\n        secBreakLeft: 0,\n      });\n      y.currentTime = 1;\n      y.play();      \n    }  \n  };\n\n  interval = () => {const intervalID = setInterval(this.setTime, 1000); return intervalID};\n\n  handlePlay = () => {\n    this.setState({\n      isPlay: this.state.isPlay?false:true,\n      intervalId: this.interval(),\n    });\n  }\n  handlePause = () => {    \n    this.setState({\n      isPlay: this.state.isPlay?false:true,\n      intervalId: clearInterval(this.state.intervalId)\n    });\n    let y = document.getElementById('beep');\n    y.pause();\n  }\n\n  handleInitialize = () => {\n    this.setState ({\n      isPlay: false,\n      minSessLeft: 25,\n      secSessLeft: 0,      \n      minBreakLeft: 5,\n      secBreakLeft: 0,\n      breakLength: 5,\n      sessionLength: 25,\n      intervalId: clearInterval(this.state.intervalId),\n      playingSessionTimer: true\n    });    \n    let y = document.getElementById('beep');\n    y.pause();\n    y.currentTime = 0;\n  }\n\n\n  handleBreakDecrement = () => {\n    const {isPlay, minBreakLeft, breakLength} = this.state;\n    if (minBreakLeft > 1 && \n      !isPlay &&\n      breakLength == minBreakLeft) {\n      this.setState({\n        breakLength: breakLength - 1,\n        minBreakLeft: breakLength - 1,\n        secBreakLeft: 0,\n      })\n    } else if (minBreakLeft > 1 && \n      !isPlay &&\n      breakLength != minBreakLeft) {\n      this.setState({\n        breakLength: minBreakLeft - 1,\n        minBreakLeft: minBreakLeft - 1,\n        secBreakLeft: 0,\n      })\n    }\n  }\n\n  handleBreakIncrement = () => {\n    const {isPlay, minBreakLeft, breakLength} = this.state;\n    if (minBreakLeft < 60 && \n      !isPlay &&\n      breakLength == minBreakLeft) {\n      this.setState({\n        breakLength: breakLength + 1,\n        minBreakLeft: breakLength + 1,\n        secBreakLeft: 0,\n      })\n    } else if (minBreakLeft < 60 && \n      !isPlay &&\n      breakLength != minBreakLeft) {\n      this.setState({\n        breakLength: minBreakLeft + 1,\n        minBreakLeft: minBreakLeft + 1,\n        secBreakLeft: 0,\n      })\n    }\n  }\n\n  handleSessionDecrement = () => {\n    const {isPlay, minSessLeft, sessionLength} = this.state;\n    if (minSessLeft > 1 && \n      !isPlay &&\n      sessionLength == minSessLeft) {\n      this.setState({\n        sessionLength: sessionLength - 1,\n        minSessLeft: sessionLength - 1,\n        secSessLeft: 0,\n      })\n    } else if (minSessLeft > 1 && \n      !isPlay &&\n      sessionLength != minSessLeft) {\n      this.setState({\n        sessionLength: minSessLeft - 1,\n        minSessLeft: minSessLeft - 1,\n        secSessLeft: 0,\n      })\n    }\n  }\n\n  handleSessionIncrement = () => {\n    const {isPlay, minSessLeft, sessionLength} = this.state;\n    if (minSessLeft < 60 && \n      !isPlay &&\n      sessionLength == minSessLeft) {\n      this.setState({\n        sessionLength: sessionLength + 1,\n        minSessLeft: sessionLength + 1,\n        secSessLeft: 0,\n      })\n    } else if (minSessLeft < 60 && \n      !isPlay &&\n      sessionLength != minSessLeft) {\n      this.setState({\n        sessionLength: minSessLeft + 1,\n        minSessLeft: minSessLeft + 1,\n        secSessLeft: 0,\n      })\n    }\n  }\n\n  handleReset = () => {\n    this.handleInitialize()\n  }\n\n  checkTime = (i) => {\n    if (i < 10) {\n      i = \"0\" + i;\n    }\n    return i;\n  }\n  \n  render() {\n    return (\n      <div className=\"container\"  style={{textAlign:\"center\"}}>     \n        <div className=\"row\">\n          <div className=\"col col-sm-3\"></div>\n          <div className=\"col col-sm-3\">\n            <div id=\"break-label\">Break length</div>\n            <button id=\"break-decrement\" onClick={this.handleBreakDecrement}>\n              <i className=\"fas fa-arrow-circle-down\" /> \n            </button>\n            <div id=\"break-length\">\n              {\n                this.state.breakLength\n              }\n            </div>\n            <button id=\"break-increment\" onClick={this.handleBreakIncrement}>\n              <i className=\"fas fa-arrow-circle-up\" /> \n            </button>\n          </div>\n          <div className=\"col col-sm-3\">    \n            <div id=\"session-label\">Session length</div>        \n            <button id=\"session-decrement\" onClick={this.handleSessionDecrement}>\n              <i className=\"fas fa-arrow-circle-down\" />\n            </button>\n            <div id=\"session-length\">\n              {\n                this.state.sessionLength\n              }\n            </div>\n            <button id=\"session-increment\" onClick={this.handleSessionIncrement}>\n              <i className=\"fas fa-arrow-circle-up\" /> \n            </button>\n          </div>\n          <div className=\"col col-sm-3\"></div>\n        </div> \n        <div className=\"row\">\n          <div className=\"col col-sm-4\"></div>\n          <div className=\"col col-sm-4 session-border\">\n            <div id=\"timer-label\"><p style={{fontSize:\"40pt\"}}>\n              {\n                this.state.playingSessionTimer?\n                  'Session'\n                :\n                  'Break'\n              }\n              </p>\n              </div>\n            <div id=\"time-left\">\n              {\n                this.state.playingSessionTimer?\n                  this.checkTime(this.state.minSessLeft) + ':' + this.checkTime(this.state.secSessLeft)\n                :\n                this.checkTime(this.state.minBreakLeft) + ':' + this.checkTime(this.state.secBreakLeft)\n              }\n            </div>\n          </div>\n          <div className=\"col col-sm-4\"></div>\n        </div>  \n        <div className=\"row\">\n            <div className=\"col col-sm-12\">\n              {\n                !this.state.isPlay?\n                  <button id=\"start_stop\" onClick={this.handlePlay}>\n                    <i className=\"fas fa-solid fa-play\"></i>\n                  </button>\n                :\n                  <button id=\"start_stop\" onClick={this.handlePause}>\n                    <i className=\"fas fa-solid fa-pause\"></i>\n                  </button>\n              }\n              <button id=\"reset\" onClick={this.handleReset}>\n                <i className=\"fas fa-solid fa-stop\"></i>\n              </button> \n            </div>\n        </div>             \n        <audio\n          id=\"beep\"          \n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}